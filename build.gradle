buildscript {


    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: 'checkstyle'

    version = '1.0'
    ext {
        appName = "Piazza Panic"
        gdxVersion = '1.11.0'
        roboVMVersion = '2.3.16'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
        checkstyleVersion = '10.4'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }

    configurations {
        checkstyleRules
    }

    dependencies {
            checkstyleRules(
                "com.puppycrawl.tools:checkstyle:${checkstyleVersion}") {
                transitive = false
            }
    }

    checkstyle {
        toolVersion "${checkstyleVersion}"
        config = resources.text.fromArchiveEntry(configurations.checkstyleRules, 'google_checks.xml')
    }

    tasks.withType(Checkstyle) {
        reports {
            xml.required = true
            html.required = true
        }
    }
}

project(":desktop") {
    apply plugin: "java-library"


    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"

    }
}

project(":core") {
    apply plugin: 'java-library'

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    }
}

project(":tests") {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'java-library'

    sourceSets.test.java.srcDirs = ["src/"]

    dependencies {
        implementation project(":core")

        implementation  "junit:junit:4.+"
        implementation  "org.mockito:mockito-all:1.9.+"

        implementation  "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation  "com.badlogicgames.gdx:gdx:$gdxVersion"

        testImplementation "junit:junit:4.+"

        testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }

    gradle.projectsEvaluated {
        // include src from all dependent projects (compile dependency) in JaCoCo test report
        jacocoTestReport {
            // get all projects we have a (compile) dependency on
            def projs = configurations.implementation.getAllDependencies().withType(ProjectDependency).collect{it.getDependencyProject()}
            projs.each {
                additionalSourceDirs files(it.sourceSets.main.java.srcDirs)
                additionalClassDirs files(it.sourceSets.main.output)
            }

            reports {
                // Generate HTML for local preview, xml for CI
                xml.required = true
                html.enabled = true
                xml.outputLocation = layout.buildDirectory.file("jacoco.xml")
                csv.enabled = false
            }
        }
    }
}

